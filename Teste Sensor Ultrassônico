#define TRIG_PIN    8
#define ECHO_PIN    7
#define LED_PIN     13
#define SOUND_SPEED 0.034
 
unsigned long duration; // Variável para armazenar um número comprido não negativo
float distance;         // Variável para armazenar um número flutuante (decimal)
 
 
/* Essa função é responsável por fazer o sensor liberar um pulso sônico e ler o tempo
 * que esse pulso leva para voltar ao sensor. Feito isso, ele calcula a distância com
 * a velocidade do som (0.034) e retorna a distância em CENTÍMETROS (valor flutuante).
 */
double getDistance(void) {
    digitalWrite(TRIG_PIN, LOW);        // Desativa os pulsos por 2 micro secs
    delayMicroseconds(2);
  
    digitalWrite(TRIG_PIN, HIGH);       // Envia um pulso com 10 micro secs de comprimento
    delayMicroseconds(10);
    digitalWrite(TRIG_PIN, LOW);
  
    duration = pulseIn(ECHO_PIN, HIGH); // Registra o tempo da volta do pulso
    return duration * SOUND_SPEED / 2;  // Retorna usando a fórmula da velocidade do som
}
 
 
/* Apenas configura os pinos do sensor, configura o pino do LED para sair energia dele
 * e configura também o monitor Serial na porta 9600 (pra você ver a distância que o
 * código está calculando no PC).
 */
void setup(void) {
    pinMode(TRIG_PIN, OUTPUT);
    pinMode(ECHO_PIN, INPUT);
    pinMode(LED_PIN, OUTPUT);
  
    Serial.begin(9600);
}
 
 
/* Pega distância e mostra o resultado na tela. Depois acende o LED se a distância for
 * menor ou igual a 15cm, se ela for maior que isso, o LED deve apagar.
 */
void loop(void) {
    distance = getDistance();
    Serial.println(distance);
  
    if (distance <= 15)
        digitalWrite(LED_PIN, HIGH);
    else
        digitalWrite(LED_PIN, LOW);
}
